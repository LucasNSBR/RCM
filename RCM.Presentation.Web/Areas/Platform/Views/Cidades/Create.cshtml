@model RCM.Application.ViewModels.CidadeViewModel

@{
    ViewData["Title"] = "Adicionar nova cidade";
}

<h5>Adicionar</h5>

<div class="form-container col s12 m12">
    <form asp-action="Create">
        <p class="px-1 font-bold lead">
            Informação geral
        </p>

        <div class="row">
            <div class="input-field col s12 m6">
                <label asp-for="Nome"></label>
                <input asp-for="Nome" class="input-field" data-length="50" id="nome" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12 m6">
                <input type="hidden" asp-for="EstadoId" id="estado-input" />
                <select id="estado-select"></select>
                <label asp-for="EstadoId"></label>
                <span asp-validation-for="EstadoId" class="text-danger"></span>
            </div>
        </div>

        <div class="row pt-2 px-1">
            <post-button>Confirmar</post-button>
        </div>
    </form>
</div>

<div>
    <a asp-action="Index">Voltar para a lista</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/ajax-call.min.js"></script>

    <script>
        var estadoUrl = '@Url.Action("GetEstados", "Cidades")';
        var estadoSelect = $('#estado-select');
        var estadoInput = $('#estado-input');

        reloadSelect(estadoUrl, estadoSelect, estadoInput);

        $(estadoSelect).change(function () {
            var optionId = $('#estado-select option:selected')[0].value;
            $(estadoInput).val(optionId);
        })
    </script>
}