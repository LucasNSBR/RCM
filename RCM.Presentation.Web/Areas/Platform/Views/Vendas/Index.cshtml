@using RCM.Domain.Models.VendaModels

@model RCM.Presentation.Web.ViewModels.VendasIndexViewModel

@{
    ViewData["Title"] = "Vendas - Índice";
}

<float-action-button controller="Vendas"></float-action-button>

<div class="form-container col s12 m12">
    <form>
        <div class="col s12 m12">
            <div class="row my-0 py-0">
                <div class="input-field col s5 m5">
                    <label for="vendaId">Id da Venda</label>
                    <input name="vendaId" type="text" id="vendaId" />
                </div>
                <div class="input-field col s4 m3">
                    <select>
                        <option value="vendaId">Id da Venda</option>
                    </select>
                </div>
                <div class="col s4 m4 pt-2 px-0 mx-0 w-100">
                    <a class="btn waves-effect purple left no-border col s1 m2" id="advancedSearchToggler">
                        <i class="material-icons center">keyboard_arrow_down</i>
                    </a>
                    <button type="submit" class="btn waves-effect purple no-border col s11 m10">
                        <i class="material-icons right">search</i>
                        Pesquisar
                    </button>
                </div>
            </div>
        </div>

        <div id="advancedSearch" class="col s12 m12">
            <div class="row">
                <div class="input-field col s12 m3">
                    <input asp-for="MinValor" class="input-field" />
                    <label for="minValor">Valor mínimo</label>
                </div>
                <div class="input-field col s12 m3">
                    <input asp-for="MaxValor" class="input-field" />
                    <label for="maxValor">Valor máximo</label>
                </div>
                <div class="input-field col s12 m3">
                    <input asp-for="DataInicial" class="datepicker" />
                    <label for="dataInicial">Data Inicial</label>
                </div>
                <div class="input-field col s12 m3">
                    <input asp-for="DataFinal" class="datepicker" />
                    <label for="dataFinal">Data Final</label>
                </div>
                <div class="input-field col s12 m6">
                    <select asp-for="ClienteId" asp-items="@(new SelectList(Model.Clientes, "Id", "Nome"))">
                        <option value="">Todos os Clientes</option>
                    </select>
                    <label for="fornecedorId">Escolher Cliente</label>
                </div>
                <div class="input-field col s12 m6">
                    <select asp-for="Status" asp-items="@(new SelectList(Enum.GetNames(typeof(VendaStatusEnum)).ToList()))">
                        <option value="">Todos</option>
                    </select>
                    <label for="status">Status da Venda</label>
                </div>
            </div>
        </div>
    </form>

    @if (Model.Vendas.List.Any())
    {
        <table class="highlight centered">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Vendas.List.FirstOrDefault().Cliente)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Vendas.List.FirstOrDefault().Cliente.DocumentoCadastroNacional)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Vendas.List.FirstOrDefault().DataVenda)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Vendas.List.FirstOrDefault().QuantidadeItens)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Vendas.List.FirstOrDefault().TotalVenda)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Vendas.List.FirstOrDefault().Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Vendas.List.FirstOrDefault().CondicaoPagamento)
                    </th>
                </tr>
            </thead>
            <tbody class="table-body">
                @foreach (var item in Model.Vendas.List)
                {
                    <tr class="@(item.ItemProblema ? "bg-danger" : "")@(item.ItemBom ? "bg-success" : "")">
                        <td class="d-hidden">
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cliente.Nome)
                        </td>
                        <td>
                            @(string.IsNullOrWhiteSpace(item.Cliente.DocumentoCadastroNacional) ? "Não cadastrado" : item.Cliente.DocumentoCadastroNacional)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DataVenda)
                        </td>
                        <td>
                            @(item.QuantidadeItens == 0 ? "Nenhum" : item.QuantidadeItens.ToString())
                        </td>
                        <td>
                            @(item.TotalVenda == 0 ? "Rascunho" : item.TotalVenda.ToString())
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @if (item.Status == VendaStatusEnum.Aberta)
                            {
                                @("Indefinidas")
                            }
                            else
                            {
                                if(item.CondicaoPagamento.TipoVenda == TipoVenda.APrazo)
                                {
                                    @("A Prazo")
                                }
                                else
                                {
                                    @("À Vista")
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="col s12 m12">
            @{
                var queryStringHelper = new Dictionary<string, string>
                 {
                    { "clienteId", Model.ClienteId?.ToString() },
                    { "minValor", Model.MinValor?.ToString() },
                    { "maxValor", Model.MaxValor?.ToString() },
                    { "dataInicial", Model.DataInicial?.ToString() },
                    { "dataFinal", Model.DataFinal?.ToString() },
                    { "pageSize", Model.Vendas.PageSize.ToString() },
                };

                var listHelper = new Dictionary<string, string>().LoadPagination(Model.Vendas);
            }

            @Html.Partial("_Pagination", new ViewDataDictionary(this.ViewData)
    {
        { "listHelper", listHelper },
        { "queryStringHelper", queryStringHelper }
    })
        </div>
    }
    else
    {
        <p class="px-1 col s12 m12">
            <i class="material-icons left">warning</i>
            Nenhuma venda encontrada.
        </p>
    }
</div>