@model RCM.Application.ViewModels.ChequeViewModels.EstadoChequeViewModel

@{
    ViewData["Title"] = $"Repassar Cheque";
}

<h5>Repassar o Cheque</h5>

<div class="form-container col s12 m12">
    <form asp-action="Repassar">
        @Html.EditorForModel()

        <div class="row">
            <div class="input-field col s12 m6">
                <input asp-for="FornecedorId" type="hidden" id="fornecedor-id" />
                <select id="fornecedor-select"></select>
                <label asp-for="Fornecedor"></label>
                <span asp-validation-for="Fornecedor" class="text-danger"></span>
                <a asp-action="Create" asp-controller="Fornecedores" target="_blank">Adicionar novo Fornecedor</a>
            </div>
            <div class="input-field col s12 m6 pt-1">
                <button class="btn-flat mx-0 small" id="reload-fornecedores-button" type="button">
                    Recarregar lista
                </button>
            </div>
        </div>

        <div class="row pt-2 px-1">
            <post-button>Confirmar</post-button>
        </div>
    </form>
</div>

<div>
    <a asp-action="Details" asp-route-id="@Model.ChequeId">Voltar para Detalhes</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/ajax-call.min.js"></script>
    
    <script>
        var fornecedorUrl = '@Url.Action("GetFornecedores", "Cheques")';
        var fornecedorDropdown = $('#fornecedor-select');
        var fornecedorInput = $('#fornecedor-id');

        reloadSelect(fornecedorUrl, fornecedorDropdown, fornecedorInput);

        $('#reload-fornecedores-button').click(function () {
            reloadSelect(fornecedorUrl, fornecedorDropdown, fornecedorInput);
        });

        $(clienteDropdown).change(function () {
            var optionId = $('#fornecedor-select option:selected')[0].value;
            $(fornecedorInput).val(optionId);
        });
    </script>
}
