@model RCM.Presentation.Web.ViewModels.BancoIndexViewModel

@{
    ViewData["Title"] = "Bancos - Índice";
}

<float-action-button controller="Bancos"></float-action-button>

<div class="form-container col s12 m12">
    <form class="row">
        <div class="col s12 m12">
            <div class="row my-0 py-0">
                <div class="input-field col s12 m5">
                    <label for="nome">Nome do Banco</label>
                    <input name="nome" type="text" id="searchInput" />
                </div>
                <div class="input-field col s12 m3">
                    <select id="propertyInput">
                        <option value="nome">Nome do Banco</option>
                        <option value="codigoCompensacao">Código de Compensação</option>
                    </select>
                </div>
                <div class="col s12 m4 pt-2 px-0 mx-0 w-100">
                    <a class="btn waves-effect purple left no-border col s2 m2" id="advancedSearchToggler">
                        <i class="material-icons center">keyboard_arrow_down</i>
                    </a><button type="submit" class="btn waves-effect purple no-border col s10 m10">
                        <i class="material-icons right">search</i>
                        Pesquisar
                    </button>
                </div>
            </div>
        </div>

        <div id="advancedSearch" class="col s12 m12">
            <div class="row">
                <div class="col s6 m6">
                    <p class="text-muted pt-0 mt-0 small">
                        Sem opções de busca avançada
                    </p>
                </div>
            </div>
        </div>
    </form>

    @if (Model.Bancos.List.Any())
    {
        <div class="mx-2">
            <table class="responsive-table highlight">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Bancos.List.FirstOrDefault().Nome)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Bancos.List.FirstOrDefault().CodigoCompensacao)
                        </th>
                    </tr>
                </thead>
                <tbody class="table-body">
                    @foreach (var item in Model.Bancos.List)
                    {
                        <tr>
                            <td class="d-hidden">
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nome)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CodigoCompensacao)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="col s12 m12">
            @{
                var queryStringHelper = new Dictionary<string, string>
                    {
                        { "nome", Model.Nome },
                        { "codigoCompensacao", Model.CodigoCompensacao.ToString() },
                    };

                var listHelper = new Dictionary<string, string>().LoadPagination(Model.Bancos);
            }

            @Html.Partial("_Pagination", new ViewDataDictionary(this.ViewData)
            {
                { "listHelper", listHelper },
                { "queryStringHelper", queryStringHelper }
            })
        </div>
    }
    else
    {
        <p class="px-1 col s12 m12">
            <i class="material-icons left">warning</i>
            Nenhum banco encontrado.
        </p>
    }
</div>